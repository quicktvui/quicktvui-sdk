package com.quicktvui.support.ui.item.utils;import android.content.Context;import android.content.res.Resources;import android.graphics.Canvas;import android.graphics.drawable.Drawable;import android.os.Build;import android.view.View;import java.util.HashMap;public class SharedDrawableManager {    static final HashMap<Integer, Drawable> cache = new HashMap();    static Drawable mShadow;    static InternalDrawable mNumberBG;    static InternalDrawable mSorceBg;    static InternalDrawable mBottomBarBG;    public static Drawable obtainDrawable(Context context, int drawableID) {        final Context applicationContext = context.getApplicationContext();        Drawable d = cache.get(drawableID);        if (d == null) {            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {                d = applicationContext.getResources().getDrawable(drawableID, null);            } else {                d = applicationContext.getResources().getDrawable(drawableID);            }        }        return d;    }//        public static void drawShadow(Canvas canvas,View view){//            if(mShadow == null){//                mShadow = view.getResources().getDrawable(R.drawable.test_music);//                mShadow.setBounds(0,0,300,400);//            }//            mShadow.setVisible(true,false);//            mShadow.draw(canvas);//        }//    public static void drawNumberBg(Canvas canvas, View view) {//        drawViewBg(canvas, view, R.drawable.bg_num, mNumberBG);//    }////    public static void drawSorceBg(Canvas canvas, View view) {//        drawViewBg(canvas, view, R.drawable.bg_num, mSorceBg);//    }////    public static void drawBottomBarBG(Canvas canvas, View view) {//        drawViewBg(canvas, view, R.drawable.item_bar_focus_back, mBottomBarBG);//    }    public static void drawViewBg(Canvas canvas, View view, int resourceID, InternalDrawable refDrawable) {        final Context applicationContext = view.getContext().getApplicationContext();        if (refDrawable == null) {            refDrawable = loadDrawable(applicationContext.getResources(), resourceID);        }        if (refDrawable != null) {            refDrawable.setBoundsIfChange(0, 0, view.getWidth(), view.getHeight());            refDrawable.mDrawable.draw(canvas);        }    }    static InternalDrawable loadDrawable(Resources resources, int id) {        Drawable d = null;        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            d = resources.getDrawable(id, null);        } else {            d = resources.getDrawable(id);        }        if (d == null) {            return null;        }        return new InternalDrawable(d);    }    final static class InternalDrawable {        final Drawable mDrawable;        int mLeft, mTop, mRight, mBottom;        InternalDrawable(Drawable drawable) {            mDrawable = drawable;        }        void setBoundsIfChange(int left, int top, int right, int bottom) {            if (mDrawable != null) {                if (left != mLeft || top != mTop || right != mRight || bottom != mBottom) {                    mDrawable.setBounds(left, top, right, bottom);                }            }        }    }}